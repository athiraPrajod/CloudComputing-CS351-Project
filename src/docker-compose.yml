version: '3'
services:
  web:
    build: .
    ports:
      - "5000:5000"
    environment:
      - MONGO_URI=mongodb+srv://athira_p:cc-proj@cc-project.jz0cu2o.mongodb.net/?retryWrites=true&w=majority
      - MONGO_DBNAME=cc-project


# version: '3'
# services:

#   flask:
#     build:
#       context: /home/athira/CloudComputing/Project/app
#       dockerfile: Dockerfile
#     container_name: flask
#     image: digitalocean.com/flask-python:3.6
#     restart: unless-stopped
#     environment:
#       APP_ENV: "prod"
#       APP_DEBUG: "False"
#       APP_PORT: 5000
#       MONGODB_DATABASE: cc-project
#       MONGODB_USERNAME: athira_p
#       MONGODB_PASSWORD: cc-proj
#       MONGODB_HOSTNAME: mongodb
#     volumes:
#       - appdata:/var/www
#     depends_on:
#       - mongodb
#     networks:
#       - frontend
#       - backend


#   mongodb:
#     image: mongo:4.0.8
#     container_name: mongodb
#     restart: unless-stopped
#     command: mongod --auth
#     environment:
#       MONGO_INITDB_ROOT_USERNAME: mongodbuser
#       MONGO_INITDB_ROOT_PASSWORD: your_mongodb_root_password
#       MONGO_INITDB_DATABASE: flaskdb
#       MONGODB_DATA_DIR: /data/db
#       MONDODB_LOG_DIR: /dev/null
#     volumes:
#       - mongodbdata:/data/db
#     networks:
#       - backend


#   webserver:
#     build:
#       context: /home/athira/CloudComputing/Project/app/nginx
#       dockerfile: Dockerfile
#     image: digitalocean.com/webserver:latest
#     container_name: webserver
#     restart: unless-stopped
#     environment:
#       APP_ENV: "prod"
#       APP_NAME: "webserver"
#       APP_DEBUG: "false"
#       SERVICE_NAME: "webserver"
#     ports:
#       - "82:82"
#       - "443:443"
#     volumes:
#       - nginxdata:/var/log/nginx
#     depends_on:
#       - flask
#     networks:
#       - frontend


# networks:
#   frontend:
#     driver: bridge
#   backend:
#     driver: bridge


# volumes:
#   mongodbdata:
#     driver: local
#   appdata:
#     driver: local
#   nginxdata:
#     driver: local

